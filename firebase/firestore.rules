rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // — allow signed-in users to look up other users
    match /users/{userId} {
      allow read:  if request.auth.uid != null;
      allow write: if false;
    }

    // — invitations: sender can create, either party can read
    match /invitations/{invId} {
      allow create: if request.auth.uid == request.resource.data.from
                 && request.resource.data.status == "pending"
                 && request.resource.data.to is string;
      allow read:   if request.auth.uid == resource.data.from
                 || request.auth.uid == resource.data.to;
      allow update, delete: if false;
    }

    // — matches: only participants can create/read/update
    match /matches/{matchId} {
      allow create: if request.auth.uid == request.resource.data.player0
                 && request.resource.data.player1 is string;
      allow read, update, delete:
          if request.auth.uid == resource.data.player0
          || request.auth.uid == resource.data.player1;

      // — moves subcollection: check the parent doc via get()
      match /moves/{moveId} {
        allow read, create: if
          // fetch the parent match document:
          (get(/databases/$(database)/documents/matches/$(matchId))
             .data.player0 == request.auth.uid)
          || (get(/databases/$(database)/documents/matches/$(matchId))
             .data.player1 == request.auth.uid);
      }
    }

    // — everything else locked down
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
