substitutions:
  _ENVIRONMENT: 'dev'
  _FOLDER_NAME: 'soccer'

steps:
  # Step 1: Get Firebase project ID
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    id: 'get-project-id'
    entrypoint: bash
    args:
      - '-c'
      - |
        set -e
        echo "🔎 Finding project for ${_FOLDER_NAME}-${_ENVIRONMENT}..."
        gcloud projects list \
          --filter="name~^${_FOLDER_NAME}-${_ENVIRONMENT}" \
          --format="value(projectId)" \
          | head -n 1 > /workspace/FIREBASE_PROJECT_ID.txt

        if [ ! -s /workspace/FIREBASE_PROJECT_ID.txt ]; then
          echo "❌ Project ID not found!"
          exit 1
        fi

  # Step 2: Install Firebase CLI
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    id: 'install-firebase-cli'
    entrypoint: bash
    args:
      - '-c'
      - |
        set -e
        echo "⬇️ Installing Firebase CLI..."
        curl -sL https://firebase.tools | bash
        mkdir -p /workspace/firebase
        cp /usr/local/bin/firebase /workspace/firebase/
        chmod +x /workspace/firebase/firebase
        echo "✅ Firebase CLI installed."

  # Step 3: Clone source code
  - name: 'gcr.io/cloud-builders/git'
    id: 'pull-files'
    entrypoint: bash
    args:
      - '-c'
      - |
        set -ex
        echo "📦 Cloning from the development branch..."
        git clone -b development --single-branch https://github.com/piotr-gorczynski/Soccer.git /workspace/soccer

        echo "📁 Copying Firestore config"
        cp /workspace/soccer/firebase/firebase.json /workspace/firebase/firebase.json
        cp /workspace/soccer/firebase/firestore.rules /workspace/firebase/firestore.rules
        cp /workspace/soccer/firebase/firestore.indexes.json /workspace/firebase/firestore.indexes.json

  # Step 4: Deploy Firestore composite indexes
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    id: 'deploy-firestore-indexes'
    entrypoint: bash
    args:
      - '-c'
      - |
        set -e
        cd /workspace/firebase
        project_id=$(cat /workspace/FIREBASE_PROJECT_ID.txt)

        echo "⬆️  Deploying Firestore indexes..."
        ./firebase deploy \
          --only firestore:indexes \
          --project="$project_id" \
          --force

        echo "✅ Firestore indexes deployed."

  # Step 5: Deploy Firestore single-field indexes (player0 / player1)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    id: 'deploy-single-field-indexes'
    entrypoint: bash
    args:
      - '-c'
      - |
        set -e
        cd /workspace
        project_id=$(cat /workspace/FIREBASE_PROJECT_ID.txt)

        echo "📝  Writing field-index flag files…"
        cat > player0.yaml <<'YAML'
        collection-group: matches
        field-path: player0
        update-mask: indexConfig
        index-config:
          indexes:
            - order: ASCENDING
              queryScope: COLLECTION_GROUP
        YAML

        cat > player1.yaml <<'YAML'
        collection-group: matches
        field-path: player1
        update-mask: indexConfig
        index-config:
          indexes:
            - order: ASCENDING
              queryScope: COLLECTION_GROUP
        YAML

        echo "⬆️  Deploying single-field index on player0…"
        gcloud firestore indexes fields update \
          projects/${project_id}/databases/(default)/collectionGroups/matches/fields/player0 \
          --flags-file=player0.yaml --quiet

        echo "⬆️  Deploying single-field index on player1…"
        gcloud firestore indexes fields update \
          projects/${project_id}/databases/(default)/collectionGroups/matches/fields/player1 \
          --flags-file=player1.yaml --quiet

        echo "✅ Single-field indexes queued for build."



options:
  logging: CLOUD_LOGGING_ONLY
