substitutions:
  _ENVIRONMENT: 'dev'
  _FOLDER_NAME: 'soccer'

steps:
  # Step 1: Retrieve the project ID
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        set -e
        echo "Checking if project starting with ${_FOLDER_NAME}-${_ENVIRONMENT} exists..."
        gcloud projects list \
          --filter="name~^${_FOLDER_NAME}-${_ENVIRONMENT}" \
          --format="value(projectId)" | head -n 1 > /workspace/SOCCER_PROJECT_ID.txt

        if [ ! -s /workspace/SOCCER_PROJECT_ID.txt ] || [ -z "$(cat /workspace/SOCCER_PROJECT_ID.txt)" ]; then
          echo "‚ùå Error: Project ID not found. Ensure the project exists."
          exit 1
        fi
        echo "‚úÖ Using project: $(cat /workspace/SOCCER_PROJECT_ID.txt)"

  # Step 2: Enable Firebase APIs in the project
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        set -e
        echo "üîì Enabling Firebase in project $(cat /workspace/SOCCER_PROJECT_ID.txt)..."
        gcloud services enable firebase.googleapis.com --project="$(cat /workspace/SOCCER_PROJECT_ID.txt)"

  # Step 3: Install Firebase CLI
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        set -e
        echo "‚¨áÔ∏è Installing Firebase CLI..."
        curl -sL https://firebase.tools | bash
        mkdir -p /workspace/firebase
        cp /usr/local/bin/firebase /workspace/firebase/
        chmod +x /workspace/firebase/firebase
        echo "üîç Verifying Firebase CLI installation..."
        if ! command -v /workspace/firebase/firebase &> /dev/null; then
          echo "‚ùå Firebase CLI installation failed. Exiting."
          exit 1
        fi
        /workspace/firebase/firebase --version
        echo "‚úÖ Firebase CLI installed successfully!"

  # Step 4: Verify Firebase Project Setup
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        set -e
        firebase_project_id=$(cat /workspace/SOCCER_PROJECT_ID.txt)
        echo "üõ†Ô∏è Verifying Firebase setup for project: $firebase_project_id..."
        mkdir -p /workspace/logs
        if ! gcloud projects describe "$firebase_project_id" &> /workspace/logs/firebase_project_info.log; then
          echo "‚ùå Firebase project verification failed. Check logs:"
          cat /workspace/logs/firebase_project_info.log || echo "No log file available."
          exit 1
        fi
        echo "‚úÖ Firebase project verification successful!"

  # Step 5: Check if Firebase Android App Exists and Create It
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        set -e
        firebase_project_id=$(cat /workspace/SOCCER_PROJECT_ID.txt)
        package_name="piotr_gorczynski.soccer2"
        mkdir -p /workspace/logs
        firebase_log_file="/workspace/logs/firebase-debug.log"
        
        echo "üì± Checking if Firebase Android App exists for project $firebase_project_id..."
        if /workspace/firebase/firebase apps:list --project="$firebase_project_id" | grep -q "$package_name"; then
          echo "‚úÖ Firebase Android App already exists. Skipping creation..."
          exit 0
        fi
        
        echo "üì± Creating Firebase Android App for project $firebase_project_id..."
        if ! /workspace/firebase/firebase apps:create android --package-name="$package_name" --project="$firebase_project_id" > "$firebase_log_file" 2>&1; then
          echo "‚ö†Ô∏è Error occurred while creating Android app. Logging details..."
          cat "$firebase_log_file"
          exit 1
        else
          echo "‚úÖ Firebase Android App created successfully!"
        fi

options:
  logging: CLOUD_LOGGING_ONLY
