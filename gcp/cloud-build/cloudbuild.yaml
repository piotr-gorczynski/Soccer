substitutions:
  _ORG_ID: '799174817843'    # Organization ID
  _FOLDER_NAME: 'Soccer'     # Parent folder name
  _ENVIRONMENT: 'dev'        # Environment delivered from the trigger

steps:
  # Step 1: Retrieve the folder ID for the specified folder name and save it to a file
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        set -e  # Exit immediately if a command fails
        echo "Retrieving folder ID for ${_FOLDER_NAME} under organization ${_ORG_ID}..."
        gcloud resource-manager folders list \
          --organization="${_ORG_ID}" \
          --filter="displayName=${_FOLDER_NAME}" \
          --format="value(ID)" > /workspace/folder_id.txt

        if [ ! -s /workspace/folder_id.txt ]; then
          echo "Error: No folder ID found for ${_FOLDER_NAME} under organization ${_ORG_ID}."
          exit 1
        fi

        echo "Folder ID retrieved and stored: $(cat /workspace/folder_id.txt)"

  # Step 2: Construct the project name using the _ENVIRONMENT variable and save it to a file
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        set -e  # Exit immediately if a command fails
        echo "Constructing project name using _ENVIRONMENT: ${_ENVIRONMENT}..."
        echo "soccer-${_ENVIRONMENT}" > /workspace/project_name.txt
        echo "Project name stored: $(cat /workspace/project_name.txt)"

  # Step 3: Read folder ID and project name from files and create the project
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        set -e  # Exit immediately if a command fails
        if [ ! -f /workspace/folder_id.txt ]; then
          echo "Error: Folder ID file not found."
          exit 1
        fi

        if [ ! -f /workspace/project_name.txt ]; then
          echo "Error: Project name file not found."
          exit 1
        fi

        echo "Reading folder ID and project name..."
        echo "Folder ID: $(cat /workspace/folder_id.txt)"
        echo "Project Name: $(cat /workspace/project_name.txt)"
        echo "Attempting to create the project..."

        gcloud projects create "$(cat /workspace/project_name.txt)" \
          --folder="$(cat /workspace/folder_id.txt)" || {
            echo "Error: Failed to create project"
            exit 1
          }

        echo "Project successfully created."

options:
  logging: CLOUD_LOGGING_ONLY
