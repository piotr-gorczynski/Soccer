substitutions:
  _ENVIRONMENT: 'dev'
  _FOLDER_NAME: 'soccer'

steps:
  # Step 1: Get Firebase Project ID
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    id: 'get-project-id'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        set -e
        echo "üîç Looking for project starting with ${_FOLDER_NAME}-${_ENVIRONMENT}..."
        gcloud projects list \
          --filter="name~^${_FOLDER_NAME}-${_ENVIRONMENT}" \
          --format="value(projectId)" | head -n 1 > /workspace/project_id.txt

        if [ ! -s /workspace/project_id.txt ]; then
          echo "‚ùå Firebase project not found."
          exit 1
        fi

        echo "‚úÖ Found project ID: $(cat /workspace/project_id.txt)"

  # Step 2: Initialize Identity Platform
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'initialize-identity-platform'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        set -e
        firebase_project_id=$(cat /workspace/project_id.txt)
        echo "üöÄ Attempting to initialize Identity Platform for project: $firebase_project_id..."

        if gcloud beta identity platforms initialize --project="$firebase_project_id"; then
          echo "‚úÖ Identity Platform initialized successfully."
        else
          echo "‚ùå Failed to initialize Identity Platform for project: $firebase_project_id"
          exit 1
        fi

  # Step 3: Write Terraform config using google-beta provider
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    id: 'write-tf-config'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        set -e
        mkdir -p /workspace/tf-auth
        cat <<EOF > /workspace/tf-auth/main.tf
        terraform {
          required_providers {
            google-beta = {
              source  = "hashicorp/google-beta"
              version = ">= 4.80.0"
            }
          }
        }

        provider "google-beta" {
          project = "$(cat /workspace/project_id.txt)"
        }

        resource "google_identity_platform_project_default_config" "default" {
          provider = google-beta
          project  = "$(cat /workspace/project_id.txt)"
          sign_in {
            email {
              enabled = true
            }
            anonymous {
              enabled = false
            }
            phone_number {
              enabled = false
            }
          }
        }
        EOF

  # Step 4: Terraform Init
  - name: 'hashicorp/terraform:light'
    id: 'terraform-init'
    dir: '/workspace/tf-auth'
    entrypoint: 'sh'
    args: ['-c', 'terraform init']

  # Step 5: Terraform Apply
  - name: 'hashicorp/terraform:light'
    id: 'terraform-apply'
    dir: '/workspace/tf-auth'
    entrypoint: 'sh'
    args: ['-c', 'terraform apply -auto-approve']

options:
  logging: CLOUD_LOGGING_ONLY
